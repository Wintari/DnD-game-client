# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\iVlad\Documents\DND_Client\form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import collections
from sys import winver
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QDialog, QFileDialog, QWidget
from PyQt5 import QtQuickWidgets
import CharacterSheet
import dice
import Collection


class Ui_PlayingField(object):
    def setupUi(self, PlayingField):
        PlayingField.setObjectName("PlayingField")
        PlayingField.resize(1333, 613)
        self.collectionButton = QtWidgets.QPushButton(PlayingField)
        self.collectionButton.setGeometry(10,290,241,28)
        self.collectionButton.setText("Коллекция")
        self.createButton = QtWidgets.QPushButton(PlayingField)
        self.createButton.setGeometry(10, 230, 241, 28)
        self.createButton.setText("Создать персонажа")
        self.loadButton = QtWidgets.QPushButton(PlayingField)
        self.loadButton.setGeometry(10, 260, 115, 28)
        self.loadButton.setText("Загрузить")
        self.saveButton = QtWidgets.QPushButton(PlayingField)
        self.saveButton.setGeometry(136, 260, 115, 28)
        self.saveButton.setText("Сохранить")
        self.textEdit_log = QtWidgets.QTextEdit(PlayingField)
        self.textEdit_log.setGeometry(QtCore.QRect(1080, 540, 181, 51))
        self.textEdit_log.setObjectName("textEdit_log")
        self.pushButton_log = QtWidgets.QPushButton(PlayingField)
        self.pushButton_log.setGeometry(QtCore.QRect(1270, 540, 51, 51))
        self.pushButton_log.setObjectName("pushButton_log")
        self.textBrowser_log = QtWidgets.QTextBrowser(PlayingField)
        self.textBrowser_log.setGeometry(QtCore.QRect(1080, 20, 241, 511))
        self.textBrowser_log.setObjectName("textBrowser_log")
        self.comboBox_characteristic = QtWidgets.QSpinBox(PlayingField)
        self.comboBox_characteristic.setGeometry(QtCore.QRect(130, 20, 121, 21))
        self.comboBox_characteristic.setObjectName("comboBox_characteristic")
        #self.comboBox_characteristic.addItems()
        self.spinBox_throwNumber = QtWidgets.QSpinBox(PlayingField)
        self.spinBox_throwNumber.setGeometry(QtCore.QRect(130, 50, 121, 21))
        self.spinBox_throwNumber.setObjectName("spinBox_throwNumber")
        self.spinBox_throwNumber.setMinimum(1)
        self.comboBox_edgeNumber = QtWidgets.QComboBox(PlayingField)
        self.comboBox_edgeNumber.setGeometry(QtCore.QRect(130, 80, 121, 21))
        self.comboBox_edgeNumber.setObjectName("comboBox_edgeNumber")
        self.comboBox_edgeNumber.addItems(["4", "6", "8", "12", "16", "20", "100"])
        self.spinBox_modifically = QtWidgets.QSpinBox(PlayingField)
        self.spinBox_modifically.setGeometry(QtCore.QRect(130, 110, 121, 21))
        self.spinBox_modifically.setObjectName("spinBox_modifically")
        self.comboBox_throwType = QtWidgets.QComboBox(PlayingField)
        self.comboBox_throwType.setGeometry(QtCore.QRect(130, 140, 121, 21))
        self.comboBox_throwType.setObjectName("comboBox_throwType")
        self.comboBox_throwType.addItems(["Сумма", "С преимуществом", "С помехой", "Без минимума", "Без максимума"])
        self.label_charecteristic = QtWidgets.QLabel(PlayingField)
        self.label_charecteristic.setGeometry(QtCore.QRect(10, 20, 111, 16))
        self.label_charecteristic.setObjectName("label_charecteristic")
        self.label_throwNumber = QtWidgets.QLabel(PlayingField)
        self.label_throwNumber.setGeometry(QtCore.QRect(10, 50, 111, 16))
        self.label_throwNumber.setObjectName("label_throwNumber")
        self.label_edgeNumber = QtWidgets.QLabel(PlayingField)
        self.label_edgeNumber.setGeometry(QtCore.QRect(10, 80, 111, 16))
        self.label_edgeNumber.setObjectName("label_edgeNumber")
        self.label_modifically = QtWidgets.QLabel(PlayingField)
        self.label_modifically.setGeometry(QtCore.QRect(10, 110, 111, 16))
        self.label_modifically.setObjectName("label_modifically")
        self.label_throwType = QtWidgets.QLabel(PlayingField)
        self.label_throwType.setGeometry(QtCore.QRect(10, 140, 111, 16))
        self.label_throwType.setObjectName("label_throwType")
        self.pushButton_throw = QtWidgets.QPushButton(PlayingField)
        self.pushButton_throw.setGeometry(QtCore.QRect(10, 170, 241, 28))
        self.pushButton_throw.setObjectName("pushButton_throw")
        self.line_2 = QtWidgets.QFrame(PlayingField)
        self.line_2.setGeometry(QtCore.QRect(1060, 0, 20, 611))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(PlayingField)
        self.line_3.setGeometry(QtCore.QRect(250, 0, 20, 611))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")

        self.quickWidget_char = QtQuickWidgets.QQuickWidget(PlayingField)
        self.quickWidget_char.setObjectName("quickWidget_char")
        self.central_ui = CharacterSheet.CharacterSheetForm()
        self.central_ui.setupUi(self.quickWidget_char)
        self.central_area = QtWidgets.QScrollArea(PlayingField)
        self.central_area.setGeometry(QtCore.QRect(264, 0, 800, 613))
        self.central_area.setWidget(self.quickWidget_char)

        self.throwResult = QtWidgets.QLineEdit(PlayingField)
        self.throwResult.setGeometry(10, 200, 241, 28)
        self.throwResult.setReadOnly(1)

        self.retranslateUi(PlayingField)

        self.loadButton.clicked.connect(self.loadChar)

        self.saveButton.clicked.connect(self.saveChar)

        self.createButton.clicked.connect(self.createChar)

        self.pushButton_log.clicked.connect(self.sendMsg)

        self.pushButton_throw.clicked.connect(self.getThrowData)

        self.collectionButton.clicked.connect(self.openCollection)
        QtCore.QMetaObject.connectSlotsByName(PlayingField)


    def retranslateUi(self, PlayingField):
        _translate = QtCore.QCoreApplication.translate
        PlayingField.setWindowTitle(_translate("PlayingField", "PlayingField"))
        self.pushButton_log.setText(_translate("PlayingField", "OK"))
        self.label_charecteristic.setText(_translate("PlayingField", "Модиф. хар-ки"))
        self.label_throwNumber.setText(_translate("PlayingField", "Кол-во бросков"))
        self.label_edgeNumber.setText(_translate("PlayingField", "Кол-во граней"))
        self.label_modifically.setText(_translate("PlayingField", "Модификатор"))
        self.label_throwType.setText(_translate("PlayingField", "Тип броска"))
        self.pushButton_throw.setText(_translate("PlayingField", "Сделать бросок"))


    def setCharacteristic(self, list):
        self.comboBox_characteristic.addItems(list)

    def setEdgeNumber(self, list):
        self.comboBox_edgeNumber.addItems(list)

    def setThrowType(self,list):
        self.comboBox_throwType.addItems(list)

    def getThrowData(self):
        characteristic = self.comboBox_characteristic.value()
        throwNumber = self.spinBox_throwNumber.value()
        edgeNumber = int(self.comboBox_edgeNumber.currentText())
        modifically = self.spinBox_modifically.value()
        throwType_str = self.comboBox_throwType.currentText()
        if(throwType_str == "Сумма"):
            throwType = dice.ThrowTypes.summ
        elif(throwType_str == "С преимуществом"):
            throwType = dice.ThrowTypes.advantage
        elif(throwType_str == "С помехой"):
            throwType = dice.ThrowTypes.hindrance
        elif(throwType_str == "Без минимума"):
            throwType = dice.ThrowTypes.withoutMin
        elif(throwType_str == "Без максимума"):
            throwType = dice.ThrowTypes.withoutMax
        res = dice.throwMany(throwNumber, edgeNumber, throwType, modifically, characteristic)
        self.textBrowser_log.append("Результат броска " +str(res)+ "!")
        self.throwResult.clear()
        self.throwResult.setText(str(res))

    def editLog(self, text):
        self.textBrowser_log.append(text)

    def sendMsg(self):
        self.editLog(self.textEdit_log.toPlainText())

    def loadChar(self):
        path = str(QFileDialog.getOpenFileName(directory="./data/characters",filter='*.json')[0])
        if len(path) > 0:
            self.central_ui.loadCharacter(path)
    
    def saveChar(self):
        path = str(QFileDialog.getSaveFileName(directory="./data/characters", filter='*.json')[0])
        if len(path) > 0:
            self.central_ui.saveCharacter(path)


    def createChar(self):
        self.central_ui.createCharacter()

    def openCollection(self):
        popup = QDialog()
        popup.setWindowTitle("Коллекции.")

        collectionsUI = Collection.CollectionForm()
        collectionsUI.setupUi(popup)

        popup.exec()
        

